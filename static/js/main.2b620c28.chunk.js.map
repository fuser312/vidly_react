{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination_component.jsx","components/common/listGroup.jsx","components/common/like_component.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/moviesTable.jsx","components/movies.jsx","utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","pageSize","currentPage","pagesCount","Math","ceil","console","log","pages","_","range","className","map","page","key","onClick","onPageChange","ListGroup","items","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","LikeComponent","useState","likedClassName","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","this","columns","column","label","Component","TableBody","renderCell","content","get","data","React","MoviesTable","onLike","onDelete","movie","Movies","state","selectedGenre","handleDelete","moviesArray","filter","m","setState","handleLike","index","indexOf","handlePageChange","pageNo","handleGenreChange","handleSort","allGenres","g","moviesCount","length","allMovies","filtered","pageNumber","startIndex","slice","take","value","paginate","orderBy","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2b620c28.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked:true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\nimport _ from 'lodash';\nimport PropTypes from 'prop-types'\n\nfunction Pagination(props) {\n    //array of page numbers\n\n    const {itemsCount, pageSize, currentPage} = props;\n    const pagesCount = Math.ceil(itemsCount / pageSize)\n    console.log(`current page is ${currentPage}`)\n    if (pagesCount === 1) return null\n    const pages = _.range(1, pagesCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map(page =>\n                    <li\n                        key={page}\n                        className={page === currentPage ? \"page-item active\" : \"page-item\"}\n                        onClick={() => props.onPageChange(page)}\n                    >\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a\n                            className=\"page-link\">{page}\n                        </a>\n                    </li>)}\n\n            </ul>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\nexport default Pagination;","import React from \"react\";\n\nfunction ListGroup(props) {\n    const {items, textProperty, valueProperty, onItemSelect, selectedItem} = props;\n    return (\n        <ul className=\"list-group\">\n\n            {items.map(item =>\n                <li\n                    key={item[valueProperty]}\n                    onClick={() => onItemSelect(item)}\n                    className={selectedItem[valueProperty] === item[valueProperty] ? \"list-group-item active\" : \"list-group-item\"}>\n                    {item[textProperty]}\n                </li>\n            )}\n        </ul>\n    )\n}\n\nListGroup.defaultProps = {\n    textProperty: 'name',\n    valueProperty: '_id'\n}\nexport default ListGroup;","import React, {useState} from \"react\";\n\nexport default function LikeComponent(props) {\n    const [likedClassName] = useState(`fa fa-heart${props.liked ? \"\" : \"-o\"}`)\n    return (\n        <i className={likedClassName} style={{cursor:'pointer'}} onClick={props.onClick} aria-hidden=\"true\"></i>\n    );\n}","import React, {Component} from \"react\";\n\nexport default class TableHeader extends Component {\n\n    raiseSort = (path) => {\n        const sortColumn = {...this.props.sortColumn}\n        if (path === sortColumn.path) {\n            sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n        } else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc'\n        }\n        this.props.onSort(sortColumn);\n    }\n\n    render() {\n        return (\n            <thead>\n            <tr>\n                {this.props.columns.map(column => <th key={column.path || column.key} onClick={() => this.raiseSort(column.path)}>{column.label}</th>)}\n            </tr>\n            </thead>\n        )\n    }\n}\n","import React from \"react\";\nimport _ from 'lodash'\n\nexport default class TableBody extends React.Component {\n    renderCell =(item,column)=>{\n        if(column.content) return column.content(item)\n\n        return _.get(item, column.path);\n    }\n    render() {\n        const {data, columns} = this.props;\n\n        return (\n            <tbody>\n            {data.map(item => <tr>\n                {\n                    columns.map(column => <td>{this.renderCell(item,column)}</td>)\n                }\n            </tr>)}\n            </tbody>\n        )\n    }\n}","import React from \"react\";\nimport LikeComponent from \"./common/like_component\";\nimport TableHeader from \"./common/tableHeader\";\nimport TableBody from \"./common/tableBody\";\n\nfunction MoviesTable(props) {\n    const {onLike, onDelete, movies, sortColumn, onSort} = props;\n\n    const columns = [\n        {path: 'title', label: \"Title\"},\n        {path: 'genre.name', label: \"Genre\"},\n        {path: 'numberInStock', label: \"Stock\"},\n        {path: 'dailyRentalRate', label: \"Rate\"},\n        {\n            key: 'like', content: movie => <LikeComponent key={movie._id} liked={movie.liked}\n                                                          onClick={() => onLike(movie)}/>\n        },//for like button col\n        {\n            key: 'delete', content: movie => <button onClick={() => onDelete(movie)}\n                                                     className=\"btn btn-danger btn-sm\">Delete\n            </button>\n        },//for delete btn col\n    ]\n    return (\n        <table className=\"table\">\n            <TableHeader\n                columns={columns}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n            <TableBody\n                data={movies}\n                columns={columns}\n            />\n        </table>\n    )\n}\n\nexport default MoviesTable;","import React, {Component} from \"react\";\nimport {getMovies} from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination_component\";\nimport {paginate} from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport {getGenres} from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from 'lodash';\n\nclass Movies extends Component {\n    state = {\n        movies: [],\n        pageSize: 4,\n        currentPage: 1,\n        genres: [],\n        selectedGenre: \"\",\n        sortColumn: {\n            path: \"\",\n            order: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const allGenres = [{name: 'All Genres', _id: \"\"}, ...getGenres()]\n\n        this.setState({\n            movies: getMovies(),\n            genres: allGenres\n        })\n    }\n\n    handleDelete = movie => {\n        const moviesArray = this.state.movies.filter(m => m._id !== movie._id);\n        // console.log(movie)\n        this.setState({\n            movies: moviesArray\n        })\n    }\n    handleLike = movie => {\n        console.log(\"liked event occurred\")\n        let movies = [...this.state.movies];\n        const index = movies.indexOf(movie)\n        console.log(movie)\n        console.log(index)\n        console.log(movies[index].liked)\n        movies[index] = {...movies[index]}\n        movies[index].liked = !movies[index].liked\n        // movies[index] = !movie.liked\n        console.log(movies[index].liked)\n        this.setState({\n            movies\n        })\n    };\n    handlePageChange = (pageNo) => {\n        console.log(\"page no is\" + pageNo)\n        this.setState({currentPage: pageNo})\n    }\n    handleGenreChange = (genre) => {\n        console.log(\"selected genre is \" + genre)\n        this.setState({selectedGenre: genre, currentPage: 1})\n    }\n    handleSort = (sortColumn) => {\n        this.setState({sortColumn})\n        // console.log(path);\n    }\n\n    render() {\n        const {length: moviesCount} = this.state.movies;\n        const { pageSize, currentPage, movies: allMovies, selectedGenre, sortColumn} = this.state;\n        if (moviesCount === 0)\n            return <p>There are no Movies in the database</p>\n\n        //get selected genres and then paginate\n        const filtered = (selectedGenre && selectedGenre._id) ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n        //sort data now\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n        //paginate data now\n        const movies = paginate(sorted, currentPage, pageSize);\n        return (\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup items={this.state.genres}\n                               onItemSelect={this.handleGenreChange}\n                        // textProperty=\"name\"\n                        // valueProperty=\"_id\"\n                               selectedItem={this.state.selectedGenre}\n                    />\n                </div>\n                <div className=\"col\">\n                    <p>Showing {filtered.length} movies in the database</p>\n                    <MoviesTable\n                        movies={movies}\n                        onLike={this.handleLike}\n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                        sortColumn={sortColumn}\n                    />\n                    <Pagination\n                        onPageChange={this.handlePageChange}\n                        itemsCount={filtered.length}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Movies;","import _ from 'lodash'\n\nexport function paginate(items,pageNumber,pageSize){\n    const startIndex=(pageNumber-1)*pageSize;\n    //convert items array to lodash wrapper\n    // _.slice(items,startIndex);\n    // _.take()\n    return _(items).slice(startIndex).take(pageSize).value();\n}","import React from \"react\";\nimport \"./App.css\";\nimport Movies from \"./components/movies\";\n\nfunction App() {\n    return <main\n        className=\"container\">\n        <Movies/>\n    </main>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}