{"version":3,"sources":["services/fakeGenreService.js","services/fakeMovieService.js","components/common/pagination_component.jsx","utils/paginate.js","components/common/listGroup.jsx","components/common/like_component.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/moviesTable.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/navbar.jsx","components/movie_form.jsx","components/common/input.jsx","components/loginForm.jsx","components/signupForm.jsx","App.jsx","serviceWorker.js","index.js"],"names":["genres","_id","name","movies","title","genre","numberInStock","dailyRentalRate","publishDate","liked","Pagination","props","itemsCount","pageSize","currentPage","pagesCount","Math","ceil","console","log","pages","_","range","className","map","page","key","onClick","onPageChange","paginate","items","pageNumber","startIndex","slice","take","value","ListGroup","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","LikeComponent","useState","likedClassName","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","label","Component","TableBody","renderCell","content","get","createKey","data","React","Table","MoviesTable","onLike","onDelete","movie","to","Movies","state","selectedGenre","handleDelete","moviesArray","filter","m","setState","handleLike","index","indexOf","handlePageChange","pageNo","handleGenreChange","handleSort","getPageData","allMovies","filtered","orderBy","totalCount","length","allGenres","g","Customers","Rentals","NotFound","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","MovieForm","match","history","params","push","Input","onChange","autoFocus","error","htmlFor","LoginForm","account","username","password","errors","createRef","validate","trim","Object","keys","handleSubmit","e","preventDefault","handleAccountChange","input","currentTarget","onSubmit","SignupForm","newAccount","confirmPassword","App","Fragment","component","exact","from","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d5525225.chunk.js","sourcesContent":["export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked:true\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React from \"react\";\nimport _ from 'lodash';\nimport PropTypes from 'prop-types'\n\nfunction Pagination(props) {\n    //array of page numbers\n\n    const {itemsCount, pageSize, currentPage} = props;\n    const pagesCount = Math.ceil(itemsCount / pageSize)\n    console.log(`current page is ${currentPage}`)\n    if (pagesCount === 1) return null\n    const pages = _.range(1, pagesCount + 1);\n    return (\n        <nav>\n            <ul className=\"pagination\">\n                {pages.map(page =>\n                    <li\n                        key={page}\n                        className={page === currentPage ? \"page-item active\" : \"page-item\"}\n                        onClick={() => props.onPageChange(page)}\n                    >\n                        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                        <a\n                            className=\"page-link\">{page}\n                        </a>\n                    </li>)}\n\n            </ul>\n        </nav>\n    )\n}\n\nPagination.propTypes = {\n    itemsCount: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    onPageChange: PropTypes.func.isRequired\n};\nexport default Pagination;","import _ from 'lodash'\n\nexport function paginate(items,pageNumber,pageSize){\n    const startIndex=(pageNumber-1)*pageSize;\n    //convert items array to lodash wrapper\n    // _.slice(items,startIndex);\n    // _.take()\n    return _(items).slice(startIndex).take(pageSize).value();\n}","import React from \"react\";\n\nfunction ListGroup({items, textProperty, valueProperty, onItemSelect, selectedItem}) {\n    return (\n        <ul className=\"list-group\">\n\n            {items.map(item =>\n                <li\n                    key={item[valueProperty]}\n                    onClick={() => onItemSelect(item)}\n                    className={selectedItem[valueProperty] === item[valueProperty] ? \"list-group-item active\" : \"list-group-item\"}>\n                    {item[textProperty]}\n                </li>\n            )}\n        </ul>\n    )\n}\n\nListGroup.defaultProps = {\n    textProperty: 'name',\n    valueProperty: '_id'\n}\nexport default ListGroup;","import React, {useState} from \"react\";\n\nexport default function LikeComponent(props) {\n    const [likedClassName] = useState(`fa fa-heart${props.liked ? \"\" : \"-o\"}`)\n    return (\n        <i className={likedClassName} style={{cursor:'pointer'}} onClick={props.onClick} aria-hidden=\"true\"></i>\n    );\n}","import React, {Component} from \"react\";\n\nexport default class TableHeader extends Component {\n\n    raiseSort = (path) => {\n        const sortColumn = {...this.props.sortColumn}\n        if (path === sortColumn.path) {\n            sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc';\n        } else {\n            sortColumn.path = path;\n            sortColumn.order = 'asc'\n        }\n        this.props.onSort(sortColumn);\n    }\n    renderSortIcon = (column) => {\n        const {sortColumn} = this.props;\n        if (column.path !== sortColumn.path) return null;\n        if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\"></i>\n        return <i className=\"fa fa-sort-desc\"></i>\n    }\n\n    render() {\n        return (\n            <thead>\n            <tr>\n                {this.props.columns.map(column =>\n                    <th className={\"clickable\"}\n                        key={column.path || column.key}\n                        onClick={() => this.raiseSort(column.path)}\n                    >\n                        {column.label}{this.renderSortIcon(column)}\n                    </th>)}\n            </tr>\n            </thead>\n        )\n    }\n\n\n}\n","import React from \"react\";\nimport _ from 'lodash'\n\nexport default class TableBody extends React.Component {\n    renderCell = (item, column) => {\n        if (column.content) return column.content(item)\n\n        return _.get(item, column.path);\n    }\n    createKey = (item, column) => item._id + (column.path || column.key)\n\n    render() {\n        const {data, columns} = this.props;\n\n        return (\n            <tbody>\n            {data.map(item => <tr key={item._id}>\n                {\n                    columns.map(column => <td key={this.createKey(item, column)}>{this.renderCell(item, column)}</td>)\n                }\n            </tr>)}\n            </tbody>\n        )\n    }\n}","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nexport default function Table({columns, data, onSort, sortColumn}) {\n    return (\n        <table className=\"table\">\n            <TableHeader\n                columns={columns}\n                sortColumn={sortColumn}\n                onSort={onSort}\n            />\n            <TableBody\n                data={data}\n                columns={columns}\n            />\n        </table>\n    )\n}","import React from \"react\";\nimport LikeComponent from \"./common/like_component\";\nimport Table from \"./common/table\";\nimport {Link} from \"react-router-dom\";\n\nfunction MoviesTable(props) {\n    const {onLike, onDelete, movies, sortColumn, onSort} = props;\n\n    const columns = [\n        {path: 'title', label: \"Title\",content:movie=><Link to={`/movies/${movie._id}`}>{movie.title} </Link>},\n        {path: 'genre.name', label: \"Genre\"},\n        {path: 'numberInStock', label: \"Stock\"},\n        {path: 'dailyRentalRate', label: \"Rate\"},\n        {\n            key: 'like', content: movie => <LikeComponent key={movie._id} liked={movie.liked}\n                                                          onClick={() => onLike(movie)}/>\n        },//for like button col\n        {\n            key: 'delete', content: movie => <button onClick={() => onDelete(movie)}\n                                                     className=\"btn btn-danger btn-sm\">Delete\n            </button>\n        },//for delete btn col\n    ]\n    return (\n        <Table\n            columns={columns}\n            onSort={onSort}\n            data={movies}\n            sortColumn={sortColumn}\n        />\n    )\n}\n\nexport default MoviesTable;","import React, {Component} from \"react\";\nimport {getMovies} from \"../services/fakeMovieService\";\nimport Pagination from \"./common/pagination_component\";\nimport {paginate} from \"../utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport {getGenres} from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from 'lodash';\n\nclass Movies extends Component {\n    state = {\n        movies: [],\n        pageSize: 4,\n        currentPage: 1,\n        genres: [],\n        selectedGenre: \"\",\n        sortColumn: {\n            path: \"\",\n            order: \"\"\n        }\n    }\n\n    componentDidMount() {\n        const allGenres = [{name: 'All Genres', _id: \"\"}, ...getGenres()]\n\n        this.setState({\n            movies: getMovies(),\n            genres: allGenres\n        })\n    }\n\n    handleDelete = movie => {\n        const moviesArray = this.state.movies.filter(m => m._id !== movie._id);\n        // console.log(movie)\n        this.setState({\n            movies: moviesArray\n        })\n    }\n    handleLike = movie => {\n        console.log(\"liked event occurred\")\n        let movies = [...this.state.movies];\n        const index = movies.indexOf(movie)\n        console.log(movie)\n        console.log(index)\n        console.log(movies[index].liked)\n        movies[index] = {...movies[index]}\n        movies[index].liked = !movies[index].liked\n        // movies[index] = !movie.liked\n        console.log(movies[index].liked)\n        this.setState({\n            movies\n        })\n    };\n    handlePageChange = (pageNo) => {\n        console.log(\"page no is\" + pageNo)\n        this.setState({currentPage: pageNo})\n    }\n    handleGenreChange = (genre) => {\n        console.log(\"selected genre is \" + genre)\n        this.setState({selectedGenre: genre, currentPage: 1})\n    }\n    handleSort = (sortColumn) => {\n        this.setState({sortColumn})\n        // console.log(path);\n    }\n    getPageData=()=>{\n        const { pageSize, currentPage, movies: allMovies, selectedGenre, sortColumn} = this.state;\n        //get selected genres and then paginate\n        const filtered = (selectedGenre && selectedGenre._id) ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n        //sort data now\n        const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order])\n        //paginate data now\n        const movies = paginate(sorted, currentPage, pageSize);\n\n        return {totalCount:filtered.length,data:movies}\n    }\n    render() {\n        const {length: moviesCount} = this.state.movies;\n\n        if (moviesCount === 0)\n            return <p>There are no Movies in the database</p>\n        const { pageSize, currentPage, sortColumn} = this.state;\n        const {totalCount,data} = this.getPageData()\n        return (\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <ListGroup items={this.state.genres}\n                               onItemSelect={this.handleGenreChange}\n                        // textProperty=\"name\"\n                        // valueProperty=\"_id\"\n                               selectedItem={this.state.selectedGenre}\n                    />\n                </div>\n                <div className=\"col\">\n                    <p>Showing {totalCount} movies in the database</p>\n                    <MoviesTable\n                        movies={data}\n                        onLike={this.handleLike}\n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                        sortColumn={sortColumn}\n                    />\n                    <Pagination\n                        onPageChange={this.handlePageChange}\n                        itemsCount={totalCount}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default Movies;","import React from \"react\";\n\nexport default function Customers(props) {\n    return (\n        <h1>Customers</h1>\n    )\n}","import React from \"react\";\n\nexport default function Rentals(props) {\n    return (\n        <h1>Customers</h1>\n    )\n}","import React from \"react\";\n\nexport default function NotFound(props) {\n    return (\n        <h1>Not Found</h1>\n    )\n}","import React from \"react\";\nimport {NavLink,Link} from \"react-router-dom\";\n\nexport default function Navbar(props) {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\">Vidly</Link>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/movies\">Movies <span className=\"sr-only\">(current)</span></NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/customers\">Customers</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/rentals\">Rentals</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/login\">LogIn</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className=\"nav-link\" to=\"/signup\">SignUp</NavLink>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    )\n}\n\n","import React from \"react\";\n\nexport default function MovieForm({match, history}) {\n    return (\n        <div>\n            <h1>Movie Id: {match.params.id}</h1>\n            <button\n                onClick={() => history.push(\"/movies\")}\n                className=\"btn btn-primary\">\n                Save\n            </button>\n        </div>\n    )\n}","import React from \"react\";\n\nexport default function Input(props) {\n    const {name,label,value,onChange,autoFocus,type,error}=props;\n    return(\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input\n                autoFocus={autoFocus}\n                name={name}\n                id={name}\n                value={value}\n                onChange={onChange}\n                type={type}\n                className=\"form-control\"/>\n            {error && <div className=\"alert alert-danger\">{error}</div>}\n        </div>\n    )\n}","import React from \"react\";\nimport Input from \"./common/input\";\n\nexport default class LoginForm extends React.Component {\n    state = {\n        account: {\n            username: \"\", password: \"\"\n        },\n        errors: {}\n    }\n    username = React.createRef()\n\n\n    componentDidMount() {\n        // this.username.current.focus();\n    }\n\n    validate = () => {\n        const errors = {};\n        const {account} = this.state;\n        if (account.username.trim() === \"\") {\n            errors.username = \"username is required\"\n        }\n        if (account.password === \"\") {\n            errors.password = \"password is required\"\n        }\n        return Object.keys(errors).length === 0 ? null : errors;\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n\n        const errors = this.validate();\n        this.setState({errors: errors || {}});\n        if (errors) return\n\n        console.log(\"submitted form\")\n        // console.log(this.username.current.value)\n    }\n    handleAccountChange = ({currentTarget: input}) => {\n        const account = {...this.state.account}\n        account[input.name] = input.value;\n        this.setState({\n            account\n        })\n    }\n\n    render() {\n        const {account, errors} = this.state;\n        return (\n            <div>\n                <h1>Login</h1>\n                <form onSubmit={this.handleSubmit}>\n                    <Input\n                        name=\"username\"\n                        value={account.username}\n                        label=\"Username\"\n                        onChange={this.handleAccountChange}\n                        type={\"text\"}\n                        error={errors.username}\n                    />\n                    <Input\n                        name=\"password\"\n                        value={account.password}\n                        label=\"Password\"\n                        onChange={this.handleAccountChange}\n                        type={\"password\"}\n                        error={errors.password}\n                    />\n                    <button className=\"btn btn-primary\">\n                        Login\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport Input from \"./common/input\";\n\nexport default class SignupForm extends React.Component {\n    state = {\n        newAccount: {\n            username: \"\",\n            password: \"\",\n            confirmPassword: \"\"\n        }\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"submitted form\")\n        // console.log(this.username.current.value)\n    }\n    handleAccountChange = ({currentTarget: input}) => {\n        const newAccount = {...this.state.account}\n        newAccount[input.name] = input.value;\n        this.setState({\n            newAccount\n        })\n    }\n\n    render() {\n        const {newAccount} = this.state;\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <Input\n                    name=\"username\"\n                    value={newAccount.username}\n                    label=\"Username\"\n                    onChange={this.handleAccountChange}\n                    type={\"text\"}\n                />\n                <Input\n                    name=\"password\"\n                    value={newAccount.password}\n                    label=\"Password\"\n                    onChange={this.handleAccountChange}\n                    type={\"password\"}\n                />\n                <Input\n                    name=\"confirmPassword\"\n                    value={newAccount.confirmPassword}\n                    label=\"ConfirmPassword\"\n                    onChange={this.handleAccountChange}\n                    type={\"password\"}\n                />\n                <button className=\"btn btn-primary\">\n                    Login\n                </button>\n            </form>\n        )\n    }\n}","import React from \"react\";\nimport {Route, Redirect, Switch} from 'react-router-dom'\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport Navbar from \"./components/navbar\";\nimport MovieForm from \"./components/movie_form\";\nimport LoginForm from \"./components/loginForm\";\nimport \"./App.css\";\nimport SignupForm from \"./components/signupForm\";\n\n\nfunction App() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <main\n                className=\"container\">\n                <Switch>\n                    <Route path=\"/movies/:id\" component={MovieForm}/>\n                    <Route path=\"/login\" component={LoginForm}/>\n                    <Route path=\"/signup\" component={SignupForm}/>\n                    <Route path=\"/movies\" component={Movies}/>\n                    <Route path=\"/customers\" component={Customers}/>\n                    <Route path=\"/rentals\" component={Rentals}/>\n                    <Route path=\"/not-found\" component={NotFound}/>\n                    {/*<Route path=\"/movies\" render={(props) => <Movies {...props}/>}/>*/}\n                    {/*<Route path=\"/customers\" render={(props) => <Customers {...props}/>}/>*/}\n                    {/*<Route path=\"/rentals\" render={(props) => <Rentals {...props}/>}/>*/}\n                    {/*<Route path=\"/not-found\" render={(props) => <NotFound {...props}/>}/>*/}\n                    <Redirect exact from=\"/\" to=\"/movies\"/>\n                    <Redirect to=\"/not-found\"/>\n                </Switch>\n            </main>\n        </React.Fragment>\n);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}